#include <iostream>
#include <vector>
#include <thread>
#include <mutex>
#include <random>
#include <chrono>

using namespace std;
using namespace std::chrono;

mutex mtx; 
unsigned fideos = 100;
class Filosofo {

private:

    int id;

    unsigned int estomago;
    thread filosofoThread;

public:

    Filosofo(int filosofid) : id(filosofid), estomago(0) {}

    void pensar() {
        random_device rd;
        mt19937 gen(rd());
        uniform_int_distribution<int> distribution(1, 5);

        int tiempoPensando = distribution(gen);
        this_thread::sleep_for(seconds(tiempoPensando));
    }

    void comer(){
    }
    
    void ejecutar(){
    }
    
    void ejecutar_filosofos(){
    {
    
    void mostrar_estadisticas(){
    }
    
    
